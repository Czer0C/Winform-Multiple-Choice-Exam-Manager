#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyThiTracNghiem")]
	public partial class QuanLyThiTracNghiemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCauHoi(CauHoi instance);
    partial void UpdateCauHoi(CauHoi instance);
    partial void DeleteCauHoi(CauHoi instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertChiTietDeThi(ChiTietDeThi instance);
    partial void UpdateChiTietDeThi(ChiTietDeThi instance);
    partial void DeleteChiTietDeThi(ChiTietDeThi instance);
    partial void InsertChiTietKyThi(ChiTietKyThi instance);
    partial void UpdateChiTietKyThi(ChiTietKyThi instance);
    partial void DeleteChiTietKyThi(ChiTietKyThi instance);
    partial void InsertChuTaiKhoan(ChuTaiKhoan instance);
    partial void UpdateChuTaiKhoan(ChuTaiKhoan instance);
    partial void DeleteChuTaiKhoan(ChuTaiKhoan instance);
    partial void InsertDapAn(DapAn instance);
    partial void UpdateDapAn(DapAn instance);
    partial void DeleteDapAn(DapAn instance);
    partial void InsertDeThi(DeThi instance);
    partial void UpdateDeThi(DeThi instance);
    partial void DeleteDeThi(DeThi instance);
    partial void InsertDSDUTHI(DSDUTHI instance);
    partial void UpdateDSDUTHI(DSDUTHI instance);
    partial void DeleteDSDUTHI(DSDUTHI instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertHocSinh(HocSinh instance);
    partial void UpdateHocSinh(HocSinh instance);
    partial void DeleteHocSinh(HocSinh instance);
    partial void InsertKyThi(KyThi instance);
    partial void UpdateKyThi(KyThi instance);
    partial void DeleteKyThi(KyThi instance);
    partial void InsertLopHoc(LopHoc instance);
    partial void UpdateLopHoc(LopHoc instance);
    partial void DeleteLopHoc(LopHoc instance);
    partial void InsertLuuTru(LuuTru instance);
    partial void UpdateLuuTru(LuuTru instance);
    partial void DeleteLuuTru(LuuTru instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertQueQuan(QueQuan instance);
    partial void UpdateQueQuan(QueQuan instance);
    partial void DeleteQueQuan(QueQuan instance);
    #endregion
		
		public QuanLyThiTracNghiemDataContext() : 
				base(global::WindowsFormsApp2.Properties.Settings.Default.QuanLyThiTracNghiemConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThiTracNghiemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThiTracNghiemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThiTracNghiemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThiTracNghiemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CauHoi> CauHois
		{
			get
			{
				return this.GetTable<CauHoi>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this.GetTable<ChiTietDeThi>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietKyThi> ChiTietKyThis
		{
			get
			{
				return this.GetTable<ChiTietKyThi>();
			}
		}
		
		public System.Data.Linq.Table<ChuTaiKhoan> ChuTaiKhoans
		{
			get
			{
				return this.GetTable<ChuTaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<DapAn> DapAns
		{
			get
			{
				return this.GetTable<DapAn>();
			}
		}
		
		public System.Data.Linq.Table<DeThi> DeThis
		{
			get
			{
				return this.GetTable<DeThi>();
			}
		}
		
		public System.Data.Linq.Table<DSDUTHI> DSDUTHIs
		{
			get
			{
				return this.GetTable<DSDUTHI>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh> HocSinhs
		{
			get
			{
				return this.GetTable<HocSinh>();
			}
		}
		
		public System.Data.Linq.Table<KyThi> KyThis
		{
			get
			{
				return this.GetTable<KyThi>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc> LopHocs
		{
			get
			{
				return this.GetTable<LopHoc>();
			}
		}
		
		public System.Data.Linq.Table<LuuTru> LuuTrus
		{
			get
			{
				return this.GetTable<LuuTru>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<QueQuan> QueQuans
		{
			get
			{
				return this.GetTable<QueQuan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoi")]
	public partial class CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCauHoi;
		
		private string _Mon;
		
		private System.Nullable<int> _DoKho;
		
		private System.Nullable<int> _Khoi;
		
		private string _NoiDung;
		
		private string _GoiY;
		
		private EntitySet<ChiTietDeThi> _ChiTietDeThis;
		
		private EntitySet<DapAn> _DapAns;
		
		private EntitySet<LuuTru> _LuuTrus;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(string value);
    partial void OnMaCauHoiChanged();
    partial void OnMonChanging(string value);
    partial void OnMonChanged();
    partial void OnDoKhoChanging(System.Nullable<int> value);
    partial void OnDoKhoChanged();
    partial void OnKhoiChanging(System.Nullable<int> value);
    partial void OnKhoiChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnGoiYChanging(string value);
    partial void OnGoiYChanged();
    #endregion
		
		public CauHoi()
		{
			this._ChiTietDeThis = new EntitySet<ChiTietDeThi>(new Action<ChiTietDeThi>(this.attach_ChiTietDeThis), new Action<ChiTietDeThi>(this.detach_ChiTietDeThis));
			this._DapAns = new EntitySet<DapAn>(new Action<DapAn>(this.attach_DapAns), new Action<DapAn>(this.detach_DapAns));
			this._LuuTrus = new EntitySet<LuuTru>(new Action<LuuTru>(this.attach_LuuTrus), new Action<LuuTru>(this.detach_LuuTrus));
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mon", DbType="VarChar(4)")]
		public string Mon
		{
			get
			{
				return this._Mon;
			}
			set
			{
				if ((this._Mon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonChanging(value);
					this.SendPropertyChanging();
					this._Mon = value;
					this.SendPropertyChanged("Mon");
					this.OnMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoKho", DbType="Int")]
		public System.Nullable<int> DoKho
		{
			get
			{
				return this._DoKho;
			}
			set
			{
				if ((this._DoKho != value))
				{
					this.OnDoKhoChanging(value);
					this.SendPropertyChanging();
					this._DoKho = value;
					this.SendPropertyChanged("DoKho");
					this.OnDoKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int")]
		public System.Nullable<int> Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(255)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoiY", DbType="NVarChar(50)")]
		public string GoiY
		{
			get
			{
				return this._GoiY;
			}
			set
			{
				if ((this._GoiY != value))
				{
					this.OnGoiYChanging(value);
					this.SendPropertyChanging();
					this._GoiY = value;
					this.SendPropertyChanged("GoiY");
					this.OnGoiYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_ChiTietDeThi", Storage="_ChiTietDeThis", ThisKey="MaCauHoi", OtherKey="MaCauHoi")]
		public EntitySet<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this._ChiTietDeThis;
			}
			set
			{
				this._ChiTietDeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_DapAn", Storage="_DapAns", ThisKey="MaCauHoi", OtherKey="MaCauHoi")]
		public EntitySet<DapAn> DapAns
		{
			get
			{
				return this._DapAns;
			}
			set
			{
				this._DapAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_LuuTru", Storage="_LuuTrus", ThisKey="MaCauHoi", OtherKey="MaCauHoi")]
		public EntitySet<LuuTru> LuuTrus
		{
			get
			{
				return this._LuuTrus;
			}
			set
			{
				this._LuuTrus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CauHoi", Storage="_MonHoc", ThisKey="Mon", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._Mon = value.MaMonHoc;
					}
					else
					{
						this._Mon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
		
		private void attach_DapAns(DapAn entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_DapAns(DapAn entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
		
		private void attach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ChuTaiKhoan;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private System.Nullable<int> _PhanHe;
		
		private EntityRef<ChuTaiKhoan> _ChuTaiKhoan1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChuTaiKhoanChanging(string value);
    partial void OnChuTaiKhoanChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnPhanHeChanging(System.Nullable<int> value);
    partial void OnPhanHeChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._ChuTaiKhoan1 = default(EntityRef<ChuTaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChuTaiKhoan", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ChuTaiKhoan
		{
			get
			{
				return this._ChuTaiKhoan;
			}
			set
			{
				if ((this._ChuTaiKhoan != value))
				{
					if (this._ChuTaiKhoan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChuTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._ChuTaiKhoan = value;
					this.SendPropertyChanged("ChuTaiKhoan");
					this.OnChuTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(255)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanHe", DbType="Int")]
		public System.Nullable<int> PhanHe
		{
			get
			{
				return this._PhanHe;
			}
			set
			{
				if ((this._PhanHe != value))
				{
					this.OnPhanHeChanging(value);
					this.SendPropertyChanging();
					this._PhanHe = value;
					this.SendPropertyChanged("PhanHe");
					this.OnPhanHeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuTaiKhoan_TaiKhoan", Storage="_ChuTaiKhoan1", ThisKey="ChuTaiKhoan", OtherKey="ID", IsForeignKey=true)]
		public ChuTaiKhoan ChuTaiKhoan1
		{
			get
			{
				return this._ChuTaiKhoan1.Entity;
			}
			set
			{
				ChuTaiKhoan previousValue = this._ChuTaiKhoan1.Entity;
				if (((previousValue != value) 
							|| (this._ChuTaiKhoan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuTaiKhoan1.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._ChuTaiKhoan1.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._ChuTaiKhoan = value.ID;
					}
					else
					{
						this._ChuTaiKhoan = default(string);
					}
					this.SendPropertyChanged("ChuTaiKhoan1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDeThi")]
	public partial class ChiTietDeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDeThi;
		
		private string _MaCauHoi;
		
		private EntityRef<CauHoi> _CauHoi;
		
		private EntityRef<DeThi> _DeThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeThiChanging(string value);
    partial void OnMaDeThiChanged();
    partial void OnMaCauHoiChanging(string value);
    partial void OnMaCauHoiChanged();
    #endregion
		
		public ChiTietDeThi()
		{
			this._CauHoi = default(EntityRef<CauHoi>);
			this._DeThi = default(EntityRef<DeThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeThi
		{
			get
			{
				return this._MaDeThi;
			}
			set
			{
				if ((this._MaDeThi != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeThi = value;
					this.SendPropertyChanged("MaDeThi");
					this.OnMaDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_ChiTietDeThi", Storage="_CauHoi", ThisKey="MaCauHoi", OtherKey="MaCauHoi", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.ChiTietDeThis.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.ChiTietDeThis.Add(this);
						this._MaCauHoi = value.MaCauHoi;
					}
					else
					{
						this._MaCauHoi = default(string);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_ChiTietDeThi", Storage="_DeThi", ThisKey="MaDeThi", OtherKey="MaDeThi", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.ChiTietDeThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.ChiTietDeThis.Add(this);
						this._MaDeThi = value.MaDeThi;
					}
					else
					{
						this._MaDeThi = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietKyThi")]
	public partial class ChiTietKyThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private string _MaDeThi;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<KyThi> _KyThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnMaDeThiChanging(string value);
    partial void OnMaDeThiChanged();
    #endregion
		
		public ChiTietKyThi()
		{
			this._DeThi = default(EntityRef<DeThi>);
			this._KyThi = default(EntityRef<KyThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					if (this._KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeThi
		{
			get
			{
				return this._MaDeThi;
			}
			set
			{
				if ((this._MaDeThi != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeThi = value;
					this.SendPropertyChanged("MaDeThi");
					this.OnMaDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_ChiTietKyThi", Storage="_DeThi", ThisKey="MaDeThi", OtherKey="MaDeThi", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.ChiTietKyThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.ChiTietKyThis.Add(this);
						this._MaDeThi = value.MaDeThi;
					}
					else
					{
						this._MaDeThi = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_ChiTietKyThi", Storage="_KyThi", ThisKey="MaKyThi", OtherKey="MaKyThi", IsForeignKey=true)]
		public KyThi KyThi
		{
			get
			{
				return this._KyThi.Entity;
			}
			set
			{
				KyThi previousValue = this._KyThi.Entity;
				if (((previousValue != value) 
							|| (this._KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThi.Entity = null;
						previousValue.ChiTietKyThis.Remove(this);
					}
					this._KyThi.Entity = value;
					if ((value != null))
					{
						value.ChiTietKyThis.Add(this);
						this._MaKyThi = value.MaKyThi;
					}
					else
					{
						this._MaKyThi = default(string);
					}
					this.SendPropertyChanged("KyThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuTaiKhoan")]
	public partial class ChuTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<HocSinh> _HocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    #endregion
		
		public ChuTaiKhoan()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._HocSinh = default(EntityRef<HocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuTaiKhoan_TaiKhoan", Storage="_TaiKhoans", ThisKey="ID", OtherKey="ChuTaiKhoan")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuTaiKhoan_GiaoVien", Storage="_GiaoVien", ThisKey="ID", OtherKey="MaGiaoVien", IsUnique=true, IsForeignKey=false)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.ChuTaiKhoan = null;
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.ChuTaiKhoan = this;
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuTaiKhoan_HocSinh", Storage="_HocSinh", ThisKey="ID", OtherKey="MaHocSinh", IsUnique=true, IsForeignKey=false)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.ChuTaiKhoan = null;
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.ChuTaiKhoan = this;
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.ChuTaiKhoan1 = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.ChuTaiKhoan1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DapAn")]
	public partial class DapAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCauHoi;
		
		private string _MaDapAn;
		
		private string _NoiDung;
		
		private System.Nullable<bool> _Dung;
		
		private EntityRef<CauHoi> _CauHoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(string value);
    partial void OnMaCauHoiChanged();
    partial void OnMaDapAnChanging(string value);
    partial void OnMaDapAnChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnDungChanging(System.Nullable<bool> value);
    partial void OnDungChanged();
    #endregion
		
		public DapAn()
		{
			this._CauHoi = default(EntityRef<CauHoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDapAn", DbType="VarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDapAn
		{
			get
			{
				return this._MaDapAn;
			}
			set
			{
				if ((this._MaDapAn != value))
				{
					this.OnMaDapAnChanging(value);
					this.SendPropertyChanging();
					this._MaDapAn = value;
					this.SendPropertyChanged("MaDapAn");
					this.OnMaDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(255)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dung", DbType="Bit")]
		public System.Nullable<bool> Dung
		{
			get
			{
				return this._Dung;
			}
			set
			{
				if ((this._Dung != value))
				{
					this.OnDungChanging(value);
					this.SendPropertyChanging();
					this._Dung = value;
					this.SendPropertyChanged("Dung");
					this.OnDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_DapAn", Storage="_CauHoi", ThisKey="MaCauHoi", OtherKey="MaCauHoi", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.DapAns.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.DapAns.Add(this);
						this._MaCauHoi = value.MaCauHoi;
					}
					else
					{
						this._MaCauHoi = default(string);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeThi")]
	public partial class DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDeThi;
		
		private string _MonThi;
		
		private System.Nullable<int> _Khoi;
		
		private string _NguoiTao;
		
		private string _NgayTao;
		
		private System.Nullable<bool> _DaDung;
		
		private EntitySet<ChiTietDeThi> _ChiTietDeThis;
		
		private EntitySet<ChiTietKyThi> _ChiTietKyThis;
		
		private EntitySet<DSDUTHI> _DSDUTHIs;
		
		private EntitySet<LuuTru> _LuuTrus;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeThiChanging(string value);
    partial void OnMaDeThiChanged();
    partial void OnMonThiChanging(string value);
    partial void OnMonThiChanged();
    partial void OnKhoiChanging(System.Nullable<int> value);
    partial void OnKhoiChanged();
    partial void OnNguoiTaoChanging(string value);
    partial void OnNguoiTaoChanged();
    partial void OnNgayTaoChanging(string value);
    partial void OnNgayTaoChanged();
    partial void OnDaDungChanging(System.Nullable<bool> value);
    partial void OnDaDungChanged();
    #endregion
		
		public DeThi()
		{
			this._ChiTietDeThis = new EntitySet<ChiTietDeThi>(new Action<ChiTietDeThi>(this.attach_ChiTietDeThis), new Action<ChiTietDeThi>(this.detach_ChiTietDeThis));
			this._ChiTietKyThis = new EntitySet<ChiTietKyThi>(new Action<ChiTietKyThi>(this.attach_ChiTietKyThis), new Action<ChiTietKyThi>(this.detach_ChiTietKyThis));
			this._DSDUTHIs = new EntitySet<DSDUTHI>(new Action<DSDUTHI>(this.attach_DSDUTHIs), new Action<DSDUTHI>(this.detach_DSDUTHIs));
			this._LuuTrus = new EntitySet<LuuTru>(new Action<LuuTru>(this.attach_LuuTrus), new Action<LuuTru>(this.detach_LuuTrus));
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeThi
		{
			get
			{
				return this._MaDeThi;
			}
			set
			{
				if ((this._MaDeThi != value))
				{
					this.OnMaDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeThi = value;
					this.SendPropertyChanged("MaDeThi");
					this.OnMaDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonThi", DbType="VarChar(4)")]
		public string MonThi
		{
			get
			{
				return this._MonThi;
			}
			set
			{
				if ((this._MonThi != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonThiChanging(value);
					this.SendPropertyChanging();
					this._MonThi = value;
					this.SendPropertyChanged("MonThi");
					this.OnMonThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int")]
		public System.Nullable<int> Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiTao", DbType="VarChar(10)")]
		public string NguoiTao
		{
			get
			{
				return this._NguoiTao;
			}
			set
			{
				if ((this._NguoiTao != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiTaoChanging(value);
					this.SendPropertyChanging();
					this._NguoiTao = value;
					this.SendPropertyChanged("NguoiTao");
					this.OnNguoiTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="VarChar(10)")]
		public string NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaDung", DbType="Bit")]
		public System.Nullable<bool> DaDung
		{
			get
			{
				return this._DaDung;
			}
			set
			{
				if ((this._DaDung != value))
				{
					this.OnDaDungChanging(value);
					this.SendPropertyChanging();
					this._DaDung = value;
					this.SendPropertyChanged("DaDung");
					this.OnDaDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_ChiTietDeThi", Storage="_ChiTietDeThis", ThisKey="MaDeThi", OtherKey="MaDeThi")]
		public EntitySet<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this._ChiTietDeThis;
			}
			set
			{
				this._ChiTietDeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_ChiTietKyThi", Storage="_ChiTietKyThis", ThisKey="MaDeThi", OtherKey="MaDeThi")]
		public EntitySet<ChiTietKyThi> ChiTietKyThis
		{
			get
			{
				return this._ChiTietKyThis;
			}
			set
			{
				this._ChiTietKyThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_DSDUTHI", Storage="_DSDUTHIs", ThisKey="MaDeThi", OtherKey="MaDeThi")]
		public EntitySet<DSDUTHI> DSDUTHIs
		{
			get
			{
				return this._DSDUTHIs;
			}
			set
			{
				this._DSDUTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_LuuTru", Storage="_LuuTrus", ThisKey="MaDeThi", OtherKey="MaDeThi")]
		public EntitySet<LuuTru> LuuTrus
		{
			get
			{
				return this._LuuTrus;
			}
			set
			{
				this._LuuTrus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_DeThi", Storage="_GiaoVien", ThisKey="NguoiTao", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._NguoiTao = value.MaGiaoVien;
					}
					else
					{
						this._NguoiTao = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DeThi", Storage="_MonHoc", ThisKey="MonThi", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._MonThi = value.MaMonHoc;
					}
					else
					{
						this._MonThi = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_ChiTietKyThis(ChiTietKyThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_ChiTietKyThis(ChiTietKyThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_DSDUTHIs(DSDUTHI entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_DSDUTHIs(DSDUTHI entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DSDUTHI")]
	public partial class DSDUTHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private string _MaHocSinh;
		
		private System.Nullable<double> _KetQua;
		
		private System.Nullable<bool> _DaThi;
		
		private System.Nullable<System.TimeSpan> _ThoiGianBD;
		
		private string _MaDeThi;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<KyThi> _KyThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnKetQuaChanging(System.Nullable<double> value);
    partial void OnKetQuaChanged();
    partial void OnDaThiChanging(System.Nullable<bool> value);
    partial void OnDaThiChanged();
    partial void OnThoiGianBDChanging(System.Nullable<System.TimeSpan> value);
    partial void OnThoiGianBDChanged();
    partial void OnMaDeThiChanging(string value);
    partial void OnMaDeThiChanged();
    #endregion
		
		public DSDUTHI()
		{
			this._DeThi = default(EntityRef<DeThi>);
			this._HocSinh = default(EntityRef<HocSinh>);
			this._KyThi = default(EntityRef<KyThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					if (this._KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KetQua", DbType="Float")]
		public System.Nullable<double> KetQua
		{
			get
			{
				return this._KetQua;
			}
			set
			{
				if ((this._KetQua != value))
				{
					this.OnKetQuaChanging(value);
					this.SendPropertyChanging();
					this._KetQua = value;
					this.SendPropertyChanged("KetQua");
					this.OnKetQuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThi", DbType="Bit")]
		public System.Nullable<bool> DaThi
		{
			get
			{
				return this._DaThi;
			}
			set
			{
				if ((this._DaThi != value))
				{
					this.OnDaThiChanging(value);
					this.SendPropertyChanging();
					this._DaThi = value;
					this.SendPropertyChanged("DaThi");
					this.OnDaThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBD", DbType="Time")]
		public System.Nullable<System.TimeSpan> ThoiGianBD
		{
			get
			{
				return this._ThoiGianBD;
			}
			set
			{
				if ((this._ThoiGianBD != value))
				{
					this.OnThoiGianBDChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBD = value;
					this.SendPropertyChanged("ThoiGianBD");
					this.OnThoiGianBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeThi", DbType="VarChar(10)")]
		public string MaDeThi
		{
			get
			{
				return this._MaDeThi;
			}
			set
			{
				if ((this._MaDeThi != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeThi = value;
					this.SendPropertyChanged("MaDeThi");
					this.OnMaDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_DSDUTHI", Storage="_DeThi", ThisKey="MaDeThi", OtherKey="MaDeThi", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.DSDUTHIs.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.DSDUTHIs.Add(this);
						this._MaDeThi = value.MaDeThi;
					}
					else
					{
						this._MaDeThi = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DSDUTHI", Storage="_HocSinh", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.DSDUTHIs.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.DSDUTHIs.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_DSDUTHI", Storage="_KyThi", ThisKey="MaKyThi", OtherKey="MaKyThi", IsForeignKey=true)]
		public KyThi KyThi
		{
			get
			{
				return this._KyThi.Entity;
			}
			set
			{
				KyThi previousValue = this._KyThi.Entity;
				if (((previousValue != value) 
							|| (this._KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThi.Entity = null;
						previousValue.DSDUTHIs.Remove(this);
					}
					this._KyThi.Entity = value;
					if ((value != null))
					{
						value.DSDUTHIs.Add(this);
						this._MaKyThi = value.MaKyThi;
					}
					else
					{
						this._MaKyThi = default(string);
					}
					this.SendPropertyChanged("KyThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGiaoVien;
		
		private string _TenGiaoVien;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private System.Nullable<int> _QueQuan;
		
		private System.Nullable<bool> _GioiTinh;
		
		private string _DayMon;
		
		private EntitySet<DeThi> _DeThis;
		
		private EntitySet<KyThi> _KyThis;
		
		private EntityRef<ChuTaiKhoan> _ChuTaiKhoan;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<QueQuan> _QueQuan1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnTenGiaoVienChanging(string value);
    partial void OnTenGiaoVienChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnQueQuanChanging(System.Nullable<int> value);
    partial void OnQueQuanChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnDayMonChanging(string value);
    partial void OnDayMonChanged();
    #endregion
		
		public GiaoVien()
		{
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			this._KyThis = new EntitySet<KyThi>(new Action<KyThi>(this.attach_KyThis), new Action<KyThi>(this.detach_KyThis));
			this._ChuTaiKhoan = default(EntityRef<ChuTaiKhoan>);
			this._MonHoc = default(EntityRef<MonHoc>);
			this._QueQuan1 = default(EntityRef<QueQuan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._ChuTaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGiaoVien", DbType="NVarChar(50)")]
		public string TenGiaoVien
		{
			get
			{
				return this._TenGiaoVien;
			}
			set
			{
				if ((this._TenGiaoVien != value))
				{
					this.OnTenGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._TenGiaoVien = value;
					this.SendPropertyChanged("TenGiaoVien");
					this.OnTenGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuan", DbType="Int")]
		public System.Nullable<int> QueQuan
		{
			get
			{
				return this._QueQuan;
			}
			set
			{
				if ((this._QueQuan != value))
				{
					if (this._QueQuan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQueQuanChanging(value);
					this.SendPropertyChanging();
					this._QueQuan = value;
					this.SendPropertyChanged("QueQuan");
					this.OnQueQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayMon", DbType="VarChar(4)")]
		public string DayMon
		{
			get
			{
				return this._DayMon;
			}
			set
			{
				if ((this._DayMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayMonChanging(value);
					this.SendPropertyChanging();
					this._DayMon = value;
					this.SendPropertyChanged("DayMon");
					this.OnDayMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_DeThi", Storage="_DeThis", ThisKey="MaGiaoVien", OtherKey="NguoiTao")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_KyThi", Storage="_KyThis", ThisKey="MaGiaoVien", OtherKey="NguoiTao")]
		public EntitySet<KyThi> KyThis
		{
			get
			{
				return this._KyThis;
			}
			set
			{
				this._KyThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuTaiKhoan_GiaoVien", Storage="_ChuTaiKhoan", ThisKey="MaGiaoVien", OtherKey="ID", IsForeignKey=true)]
		public ChuTaiKhoan ChuTaiKhoan
		{
			get
			{
				return this._ChuTaiKhoan.Entity;
			}
			set
			{
				ChuTaiKhoan previousValue = this._ChuTaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._ChuTaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuTaiKhoan.Entity = null;
						previousValue.GiaoVien = null;
					}
					this._ChuTaiKhoan.Entity = value;
					if ((value != null))
					{
						value.GiaoVien = this;
						this._MaGiaoVien = value.ID;
					}
					else
					{
						this._MaGiaoVien = default(string);
					}
					this.SendPropertyChanged("ChuTaiKhoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_GiaoVien", Storage="_MonHoc", ThisKey="DayMon", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._DayMon = value.MaMonHoc;
					}
					else
					{
						this._DayMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QueQuan_GiaoVien", Storage="_QueQuan1", ThisKey="QueQuan", OtherKey="MaVung", IsForeignKey=true)]
		public QueQuan QueQuan1
		{
			get
			{
				return this._QueQuan1.Entity;
			}
			set
			{
				QueQuan previousValue = this._QueQuan1.Entity;
				if (((previousValue != value) 
							|| (this._QueQuan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QueQuan1.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._QueQuan1.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._QueQuan = value.MaVung;
					}
					else
					{
						this._QueQuan = default(Nullable<int>);
					}
					this.SendPropertyChanged("QueQuan1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_KyThis(KyThi entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_KyThis(KyThi entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh")]
	public partial class HocSinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _TenHocSinh;
		
		private System.Nullable<int> _Khoi;
		
		private string _Lop;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private System.Nullable<int> _QueQuan;
		
		private System.Nullable<bool> _GioiTinh;
		
		private EntitySet<DSDUTHI> _DSDUTHIs;
		
		private EntitySet<LuuTru> _LuuTrus;
		
		private EntityRef<ChuTaiKhoan> _ChuTaiKhoan;
		
		private EntityRef<LopHoc> _LopHoc;
		
		private EntityRef<QueQuan> _QueQuan1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnTenHocSinhChanging(string value);
    partial void OnTenHocSinhChanged();
    partial void OnKhoiChanging(System.Nullable<int> value);
    partial void OnKhoiChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnQueQuanChanging(System.Nullable<int> value);
    partial void OnQueQuanChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    #endregion
		
		public HocSinh()
		{
			this._DSDUTHIs = new EntitySet<DSDUTHI>(new Action<DSDUTHI>(this.attach_DSDUTHIs), new Action<DSDUTHI>(this.detach_DSDUTHIs));
			this._LuuTrus = new EntitySet<LuuTru>(new Action<LuuTru>(this.attach_LuuTrus), new Action<LuuTru>(this.detach_LuuTrus));
			this._ChuTaiKhoan = default(EntityRef<ChuTaiKhoan>);
			this._LopHoc = default(EntityRef<LopHoc>);
			this._QueQuan1 = default(EntityRef<QueQuan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._ChuTaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHocSinh", DbType="NVarChar(50)")]
		public string TenHocSinh
		{
			get
			{
				return this._TenHocSinh;
			}
			set
			{
				if ((this._TenHocSinh != value))
				{
					this.OnTenHocSinhChanging(value);
					this.SendPropertyChanging();
					this._TenHocSinh = value;
					this.SendPropertyChanged("TenHocSinh");
					this.OnTenHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int")]
		public System.Nullable<int> Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="VarChar(5)")]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuan", DbType="Int")]
		public System.Nullable<int> QueQuan
		{
			get
			{
				return this._QueQuan;
			}
			set
			{
				if ((this._QueQuan != value))
				{
					if (this._QueQuan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQueQuanChanging(value);
					this.SendPropertyChanging();
					this._QueQuan = value;
					this.SendPropertyChanged("QueQuan");
					this.OnQueQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DSDUTHI", Storage="_DSDUTHIs", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<DSDUTHI> DSDUTHIs
		{
			get
			{
				return this._DSDUTHIs;
			}
			set
			{
				this._DSDUTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_LuuTru", Storage="_LuuTrus", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<LuuTru> LuuTrus
		{
			get
			{
				return this._LuuTrus;
			}
			set
			{
				this._LuuTrus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuTaiKhoan_HocSinh", Storage="_ChuTaiKhoan", ThisKey="MaHocSinh", OtherKey="ID", IsForeignKey=true)]
		public ChuTaiKhoan ChuTaiKhoan
		{
			get
			{
				return this._ChuTaiKhoan.Entity;
			}
			set
			{
				ChuTaiKhoan previousValue = this._ChuTaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._ChuTaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuTaiKhoan.Entity = null;
						previousValue.HocSinh = null;
					}
					this._ChuTaiKhoan.Entity = value;
					if ((value != null))
					{
						value.HocSinh = this;
						this._MaHocSinh = value.ID;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("ChuTaiKhoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_HocSinh", Storage="_LopHoc", ThisKey="Lop", OtherKey="MaLopHoc", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.HocSinhs.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.HocSinhs.Add(this);
						this._Lop = value.MaLopHoc;
					}
					else
					{
						this._Lop = default(string);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QueQuan_HocSinh", Storage="_QueQuan1", ThisKey="QueQuan", OtherKey="MaVung", IsForeignKey=true)]
		public QueQuan QueQuan1
		{
			get
			{
				return this._QueQuan1.Entity;
			}
			set
			{
				QueQuan previousValue = this._QueQuan1.Entity;
				if (((previousValue != value) 
							|| (this._QueQuan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QueQuan1.Entity = null;
						previousValue.HocSinhs.Remove(this);
					}
					this._QueQuan1.Entity = value;
					if ((value != null))
					{
						value.HocSinhs.Add(this);
						this._QueQuan = value.MaVung;
					}
					else
					{
						this._QueQuan = default(Nullable<int>);
					}
					this.SendPropertyChanged("QueQuan1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DSDUTHIs(DSDUTHI entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_DSDUTHIs(DSDUTHI entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
		
		private void attach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KyThi")]
	public partial class KyThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private string _TenKyThi;
		
		private System.Nullable<int> _Khoi;
		
		private System.Nullable<System.DateTime> _NgayThi;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private string _NguoiTao;
		
		private string _MonThi;
		
		private System.Nullable<bool> _ThiThu;
		
		private System.Nullable<bool> _KetThuc;
		
		private System.Nullable<int> _ThoiGianLamBai;
		
		private EntitySet<ChiTietKyThi> _ChiTietKyThis;
		
		private EntitySet<DSDUTHI> _DSDUTHIs;
		
		private EntitySet<LuuTru> _LuuTrus;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnTenKyThiChanging(string value);
    partial void OnTenKyThiChanged();
    partial void OnKhoiChanging(System.Nullable<int> value);
    partial void OnKhoiChanged();
    partial void OnNgayThiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThiChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnNguoiTaoChanging(string value);
    partial void OnNguoiTaoChanged();
    partial void OnMonThiChanging(string value);
    partial void OnMonThiChanged();
    partial void OnThiThuChanging(System.Nullable<bool> value);
    partial void OnThiThuChanged();
    partial void OnKetThucChanging(System.Nullable<bool> value);
    partial void OnKetThucChanged();
    partial void OnThoiGianLamBaiChanging(System.Nullable<int> value);
    partial void OnThoiGianLamBaiChanged();
    #endregion
		
		public KyThi()
		{
			this._ChiTietKyThis = new EntitySet<ChiTietKyThi>(new Action<ChiTietKyThi>(this.attach_ChiTietKyThis), new Action<ChiTietKyThi>(this.detach_ChiTietKyThis));
			this._DSDUTHIs = new EntitySet<DSDUTHI>(new Action<DSDUTHI>(this.attach_DSDUTHIs), new Action<DSDUTHI>(this.detach_DSDUTHIs));
			this._LuuTrus = new EntitySet<LuuTru>(new Action<LuuTru>(this.attach_LuuTrus), new Action<LuuTru>(this.detach_LuuTrus));
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKyThi", DbType="NVarChar(60)")]
		public string TenKyThi
		{
			get
			{
				return this._TenKyThi;
			}
			set
			{
				if ((this._TenKyThi != value))
				{
					this.OnTenKyThiChanging(value);
					this.SendPropertyChanging();
					this._TenKyThi = value;
					this.SendPropertyChanged("TenKyThi");
					this.OnTenKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int")]
		public System.Nullable<int> Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiTao", DbType="VarChar(10)")]
		public string NguoiTao
		{
			get
			{
				return this._NguoiTao;
			}
			set
			{
				if ((this._NguoiTao != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiTaoChanging(value);
					this.SendPropertyChanging();
					this._NguoiTao = value;
					this.SendPropertyChanged("NguoiTao");
					this.OnNguoiTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonThi", DbType="VarChar(4)")]
		public string MonThi
		{
			get
			{
				return this._MonThi;
			}
			set
			{
				if ((this._MonThi != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonThiChanging(value);
					this.SendPropertyChanging();
					this._MonThi = value;
					this.SendPropertyChanged("MonThi");
					this.OnMonThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThiThu", DbType="Bit")]
		public System.Nullable<bool> ThiThu
		{
			get
			{
				return this._ThiThu;
			}
			set
			{
				if ((this._ThiThu != value))
				{
					this.OnThiThuChanging(value);
					this.SendPropertyChanging();
					this._ThiThu = value;
					this.SendPropertyChanged("ThiThu");
					this.OnThiThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KetThuc", DbType="Bit")]
		public System.Nullable<bool> KetThuc
		{
			get
			{
				return this._KetThuc;
			}
			set
			{
				if ((this._KetThuc != value))
				{
					this.OnKetThucChanging(value);
					this.SendPropertyChanging();
					this._KetThuc = value;
					this.SendPropertyChanged("KetThuc");
					this.OnKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianLamBai", DbType="Int")]
		public System.Nullable<int> ThoiGianLamBai
		{
			get
			{
				return this._ThoiGianLamBai;
			}
			set
			{
				if ((this._ThoiGianLamBai != value))
				{
					this.OnThoiGianLamBaiChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianLamBai = value;
					this.SendPropertyChanged("ThoiGianLamBai");
					this.OnThoiGianLamBaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_ChiTietKyThi", Storage="_ChiTietKyThis", ThisKey="MaKyThi", OtherKey="MaKyThi")]
		public EntitySet<ChiTietKyThi> ChiTietKyThis
		{
			get
			{
				return this._ChiTietKyThis;
			}
			set
			{
				this._ChiTietKyThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_DSDUTHI", Storage="_DSDUTHIs", ThisKey="MaKyThi", OtherKey="MaKyThi")]
		public EntitySet<DSDUTHI> DSDUTHIs
		{
			get
			{
				return this._DSDUTHIs;
			}
			set
			{
				this._DSDUTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_LuuTru", Storage="_LuuTrus", ThisKey="MaKyThi", OtherKey="MaKyThi")]
		public EntitySet<LuuTru> LuuTrus
		{
			get
			{
				return this._LuuTrus;
			}
			set
			{
				this._LuuTrus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_KyThi", Storage="_GiaoVien", ThisKey="NguoiTao", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.KyThis.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.KyThis.Add(this);
						this._NguoiTao = value.MaGiaoVien;
					}
					else
					{
						this._NguoiTao = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_KyThi", Storage="_MonHoc", ThisKey="MonThi", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.KyThis.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.KyThis.Add(this);
						this._MonThi = value.MaMonHoc;
					}
					else
					{
						this._MonThi = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietKyThis(ChiTietKyThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = this;
		}
		
		private void detach_ChiTietKyThis(ChiTietKyThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = null;
		}
		
		private void attach_DSDUTHIs(DSDUTHI entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = this;
		}
		
		private void detach_DSDUTHIs(DSDUTHI entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = null;
		}
		
		private void attach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = this;
		}
		
		private void detach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
	public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLopHoc;
		
		private System.Nullable<int> _Khoi;
		
		private System.Nullable<int> _NienKhoa;
		
		private EntitySet<HocSinh> _HocSinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopHocChanging(string value);
    partial void OnMaLopHocChanged();
    partial void OnKhoiChanging(System.Nullable<int> value);
    partial void OnKhoiChanged();
    partial void OnNienKhoaChanging(System.Nullable<int> value);
    partial void OnNienKhoaChanged();
    #endregion
		
		public LopHoc()
		{
			this._HocSinhs = new EntitySet<HocSinh>(new Action<HocSinh>(this.attach_HocSinhs), new Action<HocSinh>(this.detach_HocSinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int")]
		public System.Nullable<int> Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NienKhoa", DbType="Int")]
		public System.Nullable<int> NienKhoa
		{
			get
			{
				return this._NienKhoa;
			}
			set
			{
				if ((this._NienKhoa != value))
				{
					this.OnNienKhoaChanging(value);
					this.SendPropertyChanging();
					this._NienKhoa = value;
					this.SendPropertyChanged("NienKhoa");
					this.OnNienKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_HocSinh", Storage="_HocSinhs", ThisKey="MaLopHoc", OtherKey="Lop")]
		public EntitySet<HocSinh> HocSinhs
		{
			get
			{
				return this._HocSinhs;
			}
			set
			{
				this._HocSinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LuuTru")]
	public partial class LuuTru : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private string _MaDeThi;
		
		private string _MaHocSinh;
		
		private string _MaCauHoi;
		
		private string _MaDapAn;
		
		private EntityRef<CauHoi> _CauHoi;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<KyThi> _KyThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnMaDeThiChanging(string value);
    partial void OnMaDeThiChanged();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaCauHoiChanging(string value);
    partial void OnMaCauHoiChanged();
    partial void OnMaDapAnChanging(string value);
    partial void OnMaDapAnChanged();
    #endregion
		
		public LuuTru()
		{
			this._CauHoi = default(EntityRef<CauHoi>);
			this._DeThi = default(EntityRef<DeThi>);
			this._HocSinh = default(EntityRef<HocSinh>);
			this._KyThi = default(EntityRef<KyThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					if (this._KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeThi
		{
			get
			{
				return this._MaDeThi;
			}
			set
			{
				if ((this._MaDeThi != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeThi = value;
					this.SendPropertyChanged("MaDeThi");
					this.OnMaDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDapAn", DbType="VarChar(10)")]
		public string MaDapAn
		{
			get
			{
				return this._MaDapAn;
			}
			set
			{
				if ((this._MaDapAn != value))
				{
					this.OnMaDapAnChanging(value);
					this.SendPropertyChanging();
					this._MaDapAn = value;
					this.SendPropertyChanged("MaDapAn");
					this.OnMaDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_LuuTru", Storage="_CauHoi", ThisKey="MaCauHoi", OtherKey="MaCauHoi", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.LuuTrus.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.LuuTrus.Add(this);
						this._MaCauHoi = value.MaCauHoi;
					}
					else
					{
						this._MaCauHoi = default(string);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_LuuTru", Storage="_DeThi", ThisKey="MaDeThi", OtherKey="MaDeThi", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.LuuTrus.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.LuuTrus.Add(this);
						this._MaDeThi = value.MaDeThi;
					}
					else
					{
						this._MaDeThi = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_LuuTru", Storage="_HocSinh", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.LuuTrus.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.LuuTrus.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_LuuTru", Storage="_KyThi", ThisKey="MaKyThi", OtherKey="MaKyThi", IsForeignKey=true)]
		public KyThi KyThi
		{
			get
			{
				return this._KyThi.Entity;
			}
			set
			{
				KyThi previousValue = this._KyThi.Entity;
				if (((previousValue != value) 
							|| (this._KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThi.Entity = null;
						previousValue.LuuTrus.Remove(this);
					}
					this._KyThi.Entity = value;
					if ((value != null))
					{
						value.LuuTrus.Add(this);
						this._MaKyThi = value.MaKyThi;
					}
					else
					{
						this._MaKyThi = default(string);
					}
					this.SendPropertyChanged("KyThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMonHoc;
		
		private string _TenMonHoc;
		
		private EntitySet<CauHoi> _CauHois;
		
		private EntitySet<DeThi> _DeThis;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
		private EntitySet<KyThi> _KyThis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnTenMonHocChanging(string value);
    partial void OnTenMonHocChanged();
    #endregion
		
		public MonHoc()
		{
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			this._KyThis = new EntitySet<KyThi>(new Action<KyThi>(this.attach_KyThis), new Action<KyThi>(this.detach_KyThis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMonHoc", DbType="NVarChar(30)")]
		public string TenMonHoc
		{
			get
			{
				return this._TenMonHoc;
			}
			set
			{
				if ((this._TenMonHoc != value))
				{
					this.OnTenMonHocChanging(value);
					this.SendPropertyChanging();
					this._TenMonHoc = value;
					this.SendPropertyChanged("TenMonHoc");
					this.OnTenMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CauHoi", Storage="_CauHois", ThisKey="MaMonHoc", OtherKey="Mon")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DeThi", Storage="_DeThis", ThisKey="MaMonHoc", OtherKey="MonThi")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_GiaoVien", Storage="_GiaoViens", ThisKey="MaMonHoc", OtherKey="DayMon")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_KyThi", Storage="_KyThis", ThisKey="MaMonHoc", OtherKey="MonThi")]
		public EntitySet<KyThi> KyThis
		{
			get
			{
				return this._KyThis;
			}
			set
			{
				this._KyThis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_KyThis(KyThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_KyThis(KyThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QueQuan")]
	public partial class QueQuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaVung;
		
		private string _TenDiaPhuong;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
		private EntitySet<HocSinh> _HocSinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVungChanging(int value);
    partial void OnMaVungChanged();
    partial void OnTenDiaPhuongChanging(string value);
    partial void OnTenDiaPhuongChanged();
    #endregion
		
		public QueQuan()
		{
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			this._HocSinhs = new EntitySet<HocSinh>(new Action<HocSinh>(this.attach_HocSinhs), new Action<HocSinh>(this.detach_HocSinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVung", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaVung
		{
			get
			{
				return this._MaVung;
			}
			set
			{
				if ((this._MaVung != value))
				{
					this.OnMaVungChanging(value);
					this.SendPropertyChanging();
					this._MaVung = value;
					this.SendPropertyChanged("MaVung");
					this.OnMaVungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDiaPhuong", DbType="NVarChar(50)")]
		public string TenDiaPhuong
		{
			get
			{
				return this._TenDiaPhuong;
			}
			set
			{
				if ((this._TenDiaPhuong != value))
				{
					this.OnTenDiaPhuongChanging(value);
					this.SendPropertyChanging();
					this._TenDiaPhuong = value;
					this.SendPropertyChanged("TenDiaPhuong");
					this.OnTenDiaPhuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QueQuan_GiaoVien", Storage="_GiaoViens", ThisKey="MaVung", OtherKey="QueQuan")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QueQuan_HocSinh", Storage="_HocSinhs", ThisKey="MaVung", OtherKey="QueQuan")]
		public EntitySet<HocSinh> HocSinhs
		{
			get
			{
				return this._HocSinhs;
			}
			set
			{
				this._HocSinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.QueQuan1 = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.QueQuan1 = null;
		}
		
		private void attach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.QueQuan1 = this;
		}
		
		private void detach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.QueQuan1 = null;
		}
	}
}
#pragma warning restore 1591
