#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLSV")]
	public partial class TaiKhoanDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDeThi(ChiTietDeThi instance);
    partial void UpdateChiTietDeThi(ChiTietDeThi instance);
    partial void DeleteChiTietDeThi(ChiTietDeThi instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertDeThi(DeThi instance);
    partial void UpdateDeThi(DeThi instance);
    partial void DeleteDeThi(DeThi instance);
    partial void InsertKhoCauHoi(KhoCauHoi instance);
    partial void UpdateKhoCauHoi(KhoCauHoi instance);
    partial void DeleteKhoCauHoi(KhoCauHoi instance);
    partial void InsertKhoDapAn(KhoDapAn instance);
    partial void UpdateKhoDapAn(KhoDapAn instance);
    partial void DeleteKhoDapAn(KhoDapAn instance);
    partial void InsertLopHoc(LopHoc instance);
    partial void UpdateLopHoc(LopHoc instance);
    partial void DeleteLopHoc(LopHoc instance);
    partial void InsertLuuTru(LuuTru instance);
    partial void UpdateLuuTru(LuuTru instance);
    partial void DeleteLuuTru(LuuTru instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertQueQuan(QueQuan instance);
    partial void UpdateQueQuan(QueQuan instance);
    partial void DeleteQueQuan(QueQuan instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    #endregion
		
		public TaiKhoanDataContext() : 
				base(global::WindowsFormsApp2.Properties.Settings.Default.QLSVConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public TaiKhoanDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TaiKhoanDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TaiKhoanDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TaiKhoanDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this.GetTable<ChiTietDeThi>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<DeThi> DeThis
		{
			get
			{
				return this.GetTable<DeThi>();
			}
		}
		
		public System.Data.Linq.Table<KhoCauHoi> KhoCauHois
		{
			get
			{
				return this.GetTable<KhoCauHoi>();
			}
		}
		
		public System.Data.Linq.Table<KhoDapAn> KhoDapAns
		{
			get
			{
				return this.GetTable<KhoDapAn>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc> LopHocs
		{
			get
			{
				return this.GetTable<LopHoc>();
			}
		}
		
		public System.Data.Linq.Table<LuuTru> LuuTrus
		{
			get
			{
				return this.GetTable<LuuTru>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<QueQuan> QueQuans
		{
			get
			{
				return this.GetTable<QueQuan>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDeThi")]
	public partial class ChiTietDeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDeThi;
		
		private string _MaCauHoi;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<KhoCauHoi> _KhoCauHoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeThiChanging(string value);
    partial void OnMaDeThiChanged();
    partial void OnMaCauHoiChanging(string value);
    partial void OnMaCauHoiChanged();
    #endregion
		
		public ChiTietDeThi()
		{
			this._DeThi = default(EntityRef<DeThi>);
			this._KhoCauHoi = default(EntityRef<KhoCauHoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeThi
		{
			get
			{
				return this._MaDeThi;
			}
			set
			{
				if ((this._MaDeThi != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeThi = value;
					this.SendPropertyChanged("MaDeThi");
					this.OnMaDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					if (this._KhoCauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_ChiTietDeThi", Storage="_DeThi", ThisKey="MaDeThi", OtherKey="MaDeThi", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.ChiTietDeThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.ChiTietDeThis.Add(this);
						this._MaDeThi = value.MaDeThi;
					}
					else
					{
						this._MaDeThi = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoCauHoi_ChiTietDeThi", Storage="_KhoCauHoi", ThisKey="MaCauHoi", OtherKey="MaCauHoi", IsForeignKey=true)]
		public KhoCauHoi KhoCauHoi
		{
			get
			{
				return this._KhoCauHoi.Entity;
			}
			set
			{
				KhoCauHoi previousValue = this._KhoCauHoi.Entity;
				if (((previousValue != value) 
							|| (this._KhoCauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoCauHoi.Entity = null;
						previousValue.ChiTietDeThis.Remove(this);
					}
					this._KhoCauHoi.Entity = value;
					if ((value != null))
					{
						value.ChiTietDeThis.Add(this);
						this._MaCauHoi = value.MaCauHoi;
					}
					else
					{
						this._MaCauHoi = default(string);
					}
					this.SendPropertyChanged("KhoCauHoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ChuTaiKhoan;
		
		private string _TenTaiKhoan;
		
		private string _MatKhau;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChuTaiKhoanChanging(string value);
    partial void OnChuTaiKhoanChanged();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChuTaiKhoan", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ChuTaiKhoan
		{
			get
			{
				return this._ChuTaiKhoan;
			}
			set
			{
				if ((this._ChuTaiKhoan != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChuTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._ChuTaiKhoan = value;
					this.SendPropertyChanged("ChuTaiKhoan");
					this.OnChuTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_TaiKhoan", Storage="_SinhVien", ThisKey="ChuTaiKhoan", OtherKey="MSSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._ChuTaiKhoan = value.MSSV;
					}
					else
					{
						this._ChuTaiKhoan = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeThi")]
	public partial class DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDeThi;
		
		private string _MaMon;
		
		private System.Nullable<System.DateTime> _NgayThi;
		
		private int _Khoi;
		
		private System.Nullable<int> _NienKhoa;
		
		private System.Nullable<int> _HocKy;
		
		private EntitySet<ChiTietDeThi> _ChiTietDeThis;
		
		private EntitySet<LuuTru> _LuuTrus;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeThiChanging(string value);
    partial void OnMaDeThiChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnNgayThiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThiChanged();
    partial void OnKhoiChanging(int value);
    partial void OnKhoiChanged();
    partial void OnNienKhoaChanging(System.Nullable<int> value);
    partial void OnNienKhoaChanged();
    partial void OnHocKyChanging(System.Nullable<int> value);
    partial void OnHocKyChanged();
    #endregion
		
		public DeThi()
		{
			this._ChiTietDeThis = new EntitySet<ChiTietDeThi>(new Action<ChiTietDeThi>(this.attach_ChiTietDeThis), new Action<ChiTietDeThi>(this.detach_ChiTietDeThis));
			this._LuuTrus = new EntitySet<LuuTru>(new Action<LuuTru>(this.attach_LuuTrus), new Action<LuuTru>(this.detach_LuuTrus));
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeThi
		{
			get
			{
				return this._MaDeThi;
			}
			set
			{
				if ((this._MaDeThi != value))
				{
					this.OnMaDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeThi = value;
					this.SendPropertyChanged("MaDeThi");
					this.OnMaDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(10)")]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int NOT NULL")]
		public int Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NienKhoa", DbType="Int")]
		public System.Nullable<int> NienKhoa
		{
			get
			{
				return this._NienKhoa;
			}
			set
			{
				if ((this._NienKhoa != value))
				{
					this.OnNienKhoaChanging(value);
					this.SendPropertyChanging();
					this._NienKhoa = value;
					this.SendPropertyChanged("NienKhoa");
					this.OnNienKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="Int")]
		public System.Nullable<int> HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_ChiTietDeThi", Storage="_ChiTietDeThis", ThisKey="MaDeThi", OtherKey="MaDeThi")]
		public EntitySet<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this._ChiTietDeThis;
			}
			set
			{
				this._ChiTietDeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_LuuTru", Storage="_LuuTrus", ThisKey="MaDeThi", OtherKey="MaDeThi")]
		public EntitySet<LuuTru> LuuTrus
		{
			get
			{
				return this._LuuTrus;
			}
			set
			{
				this._LuuTrus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DeThi", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMH", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._MaMon = value.MaMH;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoCauHoi")]
	public partial class KhoCauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCauHoi;
		
		private string _MaMon;
		
		private System.Nullable<int> _Khoi;
		
		private string _NoiDung;
		
		private System.Nullable<int> _DoKho;
		
		private EntitySet<ChiTietDeThi> _ChiTietDeThis;
		
		private EntitySet<KhoDapAn> _KhoDapAns;
		
		private EntitySet<LuuTru> _LuuTrus;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(string value);
    partial void OnMaCauHoiChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnKhoiChanging(System.Nullable<int> value);
    partial void OnKhoiChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnDoKhoChanging(System.Nullable<int> value);
    partial void OnDoKhoChanged();
    #endregion
		
		public KhoCauHoi()
		{
			this._ChiTietDeThis = new EntitySet<ChiTietDeThi>(new Action<ChiTietDeThi>(this.attach_ChiTietDeThis), new Action<ChiTietDeThi>(this.detach_ChiTietDeThis));
			this._KhoDapAns = new EntitySet<KhoDapAn>(new Action<KhoDapAn>(this.attach_KhoDapAns), new Action<KhoDapAn>(this.detach_KhoDapAns));
			this._LuuTrus = new EntitySet<LuuTru>(new Action<LuuTru>(this.attach_LuuTrus), new Action<LuuTru>(this.detach_LuuTrus));
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(10)")]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int")]
		public System.Nullable<int> Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(500)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoKho", DbType="Int")]
		public System.Nullable<int> DoKho
		{
			get
			{
				return this._DoKho;
			}
			set
			{
				if ((this._DoKho != value))
				{
					this.OnDoKhoChanging(value);
					this.SendPropertyChanging();
					this._DoKho = value;
					this.SendPropertyChanged("DoKho");
					this.OnDoKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoCauHoi_ChiTietDeThi", Storage="_ChiTietDeThis", ThisKey="MaCauHoi", OtherKey="MaCauHoi")]
		public EntitySet<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this._ChiTietDeThis;
			}
			set
			{
				this._ChiTietDeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoCauHoi_KhoDapAn", Storage="_KhoDapAns", ThisKey="MaCauHoi", OtherKey="MaCauHoi")]
		public EntitySet<KhoDapAn> KhoDapAns
		{
			get
			{
				return this._KhoDapAns;
			}
			set
			{
				this._KhoDapAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoCauHoi_LuuTru", Storage="_LuuTrus", ThisKey="MaCauHoi", OtherKey="MaCauHoi")]
		public EntitySet<LuuTru> LuuTrus
		{
			get
			{
				return this._LuuTrus;
			}
			set
			{
				this._LuuTrus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_KhoCauHoi", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMH", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.KhoCauHois.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.KhoCauHois.Add(this);
						this._MaMon = value.MaMH;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.KhoCauHoi = this;
		}
		
		private void detach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.KhoCauHoi = null;
		}
		
		private void attach_KhoDapAns(KhoDapAn entity)
		{
			this.SendPropertyChanging();
			entity.KhoCauHoi = this;
		}
		
		private void detach_KhoDapAns(KhoDapAn entity)
		{
			this.SendPropertyChanging();
			entity.KhoCauHoi = null;
		}
		
		private void attach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.KhoCauHoi = this;
		}
		
		private void detach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.KhoCauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoDapAn")]
	public partial class KhoDapAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDapAn;
		
		private string _MaCauHoi;
		
		private string _NoiDung;
		
		private System.Nullable<bool> _Dung;
		
		private EntityRef<KhoCauHoi> _KhoCauHoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDapAnChanging(string value);
    partial void OnMaDapAnChanged();
    partial void OnMaCauHoiChanging(string value);
    partial void OnMaCauHoiChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnDungChanging(System.Nullable<bool> value);
    partial void OnDungChanged();
    #endregion
		
		public KhoDapAn()
		{
			this._KhoCauHoi = default(EntityRef<KhoCauHoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDapAn", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDapAn
		{
			get
			{
				return this._MaDapAn;
			}
			set
			{
				if ((this._MaDapAn != value))
				{
					this.OnMaDapAnChanging(value);
					this.SendPropertyChanging();
					this._MaDapAn = value;
					this.SendPropertyChanged("MaDapAn");
					this.OnMaDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					if (this._KhoCauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(255)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dung", DbType="Bit")]
		public System.Nullable<bool> Dung
		{
			get
			{
				return this._Dung;
			}
			set
			{
				if ((this._Dung != value))
				{
					this.OnDungChanging(value);
					this.SendPropertyChanging();
					this._Dung = value;
					this.SendPropertyChanged("Dung");
					this.OnDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoCauHoi_KhoDapAn", Storage="_KhoCauHoi", ThisKey="MaCauHoi", OtherKey="MaCauHoi", IsForeignKey=true)]
		public KhoCauHoi KhoCauHoi
		{
			get
			{
				return this._KhoCauHoi.Entity;
			}
			set
			{
				KhoCauHoi previousValue = this._KhoCauHoi.Entity;
				if (((previousValue != value) 
							|| (this._KhoCauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoCauHoi.Entity = null;
						previousValue.KhoDapAns.Remove(this);
					}
					this._KhoCauHoi.Entity = value;
					if ((value != null))
					{
						value.KhoDapAns.Add(this);
						this._MaCauHoi = value.MaCauHoi;
					}
					else
					{
						this._MaCauHoi = default(string);
					}
					this.SendPropertyChanged("KhoCauHoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
	public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLopHoc;
		
		private System.Nullable<int> _Khoi;
		
		private int _NienKhoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopHocChanging(string value);
    partial void OnTenLopHocChanged();
    partial void OnKhoiChanging(System.Nullable<int> value);
    partial void OnKhoiChanged();
    partial void OnNienKhoaChanging(int value);
    partial void OnNienKhoaChanged();
    #endregion
		
		public LopHoc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLopHoc", DbType="NVarChar(5)")]
		public string TenLopHoc
		{
			get
			{
				return this._TenLopHoc;
			}
			set
			{
				if ((this._TenLopHoc != value))
				{
					this.OnTenLopHocChanging(value);
					this.SendPropertyChanging();
					this._TenLopHoc = value;
					this.SendPropertyChanged("TenLopHoc");
					this.OnTenLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int")]
		public System.Nullable<int> Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NienKhoa", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NienKhoa
		{
			get
			{
				return this._NienKhoa;
			}
			set
			{
				if ((this._NienKhoa != value))
				{
					this.OnNienKhoaChanging(value);
					this.SendPropertyChanging();
					this._NienKhoa = value;
					this.SendPropertyChanged("NienKhoa");
					this.OnNienKhoaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LuuTru")]
	public partial class LuuTru : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDeThi;
		
		private string _MaHocSinh;
		
		private string _MaCauHoi;
		
		private string _MaDapAn;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<KhoCauHoi> _KhoCauHoi;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeThiChanging(string value);
    partial void OnMaDeThiChanged();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaCauHoiChanging(string value);
    partial void OnMaCauHoiChanged();
    partial void OnMaDapAnChanging(string value);
    partial void OnMaDapAnChanged();
    #endregion
		
		public LuuTru()
		{
			this._DeThi = default(EntityRef<DeThi>);
			this._KhoCauHoi = default(EntityRef<KhoCauHoi>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeThi
		{
			get
			{
				return this._MaDeThi;
			}
			set
			{
				if ((this._MaDeThi != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeThi = value;
					this.SendPropertyChanged("MaDeThi");
					this.OnMaDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					if (this._KhoCauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDapAn", DbType="VarChar(10)")]
		public string MaDapAn
		{
			get
			{
				return this._MaDapAn;
			}
			set
			{
				if ((this._MaDapAn != value))
				{
					this.OnMaDapAnChanging(value);
					this.SendPropertyChanging();
					this._MaDapAn = value;
					this.SendPropertyChanged("MaDapAn");
					this.OnMaDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_LuuTru", Storage="_DeThi", ThisKey="MaDeThi", OtherKey="MaDeThi", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.LuuTrus.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.LuuTrus.Add(this);
						this._MaDeThi = value.MaDeThi;
					}
					else
					{
						this._MaDeThi = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoCauHoi_LuuTru", Storage="_KhoCauHoi", ThisKey="MaCauHoi", OtherKey="MaCauHoi", IsForeignKey=true)]
		public KhoCauHoi KhoCauHoi
		{
			get
			{
				return this._KhoCauHoi.Entity;
			}
			set
			{
				KhoCauHoi previousValue = this._KhoCauHoi.Entity;
				if (((previousValue != value) 
							|| (this._KhoCauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoCauHoi.Entity = null;
						previousValue.LuuTrus.Remove(this);
					}
					this._KhoCauHoi.Entity = value;
					if ((value != null))
					{
						value.LuuTrus.Add(this);
						this._MaCauHoi = value.MaCauHoi;
					}
					else
					{
						this._MaCauHoi = default(string);
					}
					this.SendPropertyChanged("KhoCauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_LuuTru", Storage="_SinhVien", ThisKey="MaHocSinh", OtherKey="MSSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.LuuTrus.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.LuuTrus.Add(this);
						this._MaHocSinh = value.MSSV;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMH;
		
		private string _TenMH;
		
		private EntitySet<DeThi> _DeThis;
		
		private EntitySet<KhoCauHoi> _KhoCauHois;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    #endregion
		
		public MonHoc()
		{
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			this._KhoCauHois = new EntitySet<KhoCauHoi>(new Action<KhoCauHoi>(this.attach_KhoCauHois), new Action<KhoCauHoi>(this.detach_KhoCauHois));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DeThi", Storage="_DeThis", ThisKey="MaMH", OtherKey="MaMon")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_KhoCauHoi", Storage="_KhoCauHois", ThisKey="MaMH", OtherKey="MaMon")]
		public EntitySet<KhoCauHoi> KhoCauHois
		{
			get
			{
				return this._KhoCauHois;
			}
			set
			{
				this._KhoCauHois.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_KhoCauHois(KhoCauHoi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_KhoCauHois(KhoCauHoi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QueQuan")]
	public partial class QueQuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenDiaPhuong;
		
		private EntitySet<SinhVien> _SinhViens;
		
		private EntitySet<SinhVien> _SinhViens1;
		
		private EntitySet<SinhVien> _SinhViens2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenDiaPhuongChanging(string value);
    partial void OnTenDiaPhuongChanged();
    #endregion
		
		public QueQuan()
		{
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			this._SinhViens1 = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens1), new Action<SinhVien>(this.detach_SinhViens1));
			this._SinhViens2 = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens2), new Action<SinhVien>(this.detach_SinhViens2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDiaPhuong", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TenDiaPhuong
		{
			get
			{
				return this._TenDiaPhuong;
			}
			set
			{
				if ((this._TenDiaPhuong != value))
				{
					this.OnTenDiaPhuongChanging(value);
					this.SendPropertyChanging();
					this._TenDiaPhuong = value;
					this.SendPropertyChanged("TenDiaPhuong");
					this.OnTenDiaPhuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QueQuan_SinhVien", Storage="_SinhViens", ThisKey="ID", OtherKey="QueQuanID")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QueQuan_SinhVien1", Storage="_SinhViens1", ThisKey="ID", OtherKey="QueQuanID")]
		public EntitySet<SinhVien> SinhViens1
		{
			get
			{
				return this._SinhViens1;
			}
			set
			{
				this._SinhViens1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QueQuan_SinhVien2", Storage="_SinhViens2", ThisKey="ID", OtherKey="QueQuanID")]
		public EntitySet<SinhVien> SinhViens2
		{
			get
			{
				return this._SinhViens2;
			}
			set
			{
				this._SinhViens2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.QueQuan = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.QueQuan = null;
		}
		
		private void attach_SinhViens1(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.QueQuan1 = this;
		}
		
		private void detach_SinhViens1(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.QueQuan1 = null;
		}
		
		private void attach_SinhViens2(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.QueQuan2 = this;
		}
		
		private void detach_SinhViens2(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.QueQuan2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MSSV;
		
		private string _HoTen;
		
		private System.DateTime _NgaySinh;
		
		private int _QueQuanID;
		
		private bool _GioiTinh;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
		private EntitySet<LuuTru> _LuuTrus;
		
		private EntityRef<QueQuan> _QueQuan;
		
		private EntityRef<QueQuan> _QueQuan1;
		
		private EntityRef<QueQuan> _QueQuan2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSSVChanging(string value);
    partial void OnMSSVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnQueQuanIDChanging(int value);
    partial void OnQueQuanIDChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    #endregion
		
		public SinhVien()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			this._LuuTrus = new EntitySet<LuuTru>(new Action<LuuTru>(this.attach_LuuTrus), new Action<LuuTru>(this.detach_LuuTrus));
			this._QueQuan = default(EntityRef<QueQuan>);
			this._QueQuan1 = default(EntityRef<QueQuan>);
			this._QueQuan2 = default(EntityRef<QueQuan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSSV", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MSSV
		{
			get
			{
				return this._MSSV;
			}
			set
			{
				if ((this._MSSV != value))
				{
					this.OnMSSVChanging(value);
					this.SendPropertyChanging();
					this._MSSV = value;
					this.SendPropertyChanged("MSSV");
					this.OnMSSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuanID", DbType="Int NOT NULL")]
		public int QueQuanID
		{
			get
			{
				return this._QueQuanID;
			}
			set
			{
				if ((this._QueQuanID != value))
				{
					if (((this._QueQuan.HasLoadedOrAssignedValue || this._QueQuan1.HasLoadedOrAssignedValue) 
								|| this._QueQuan2.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQueQuanIDChanging(value);
					this.SendPropertyChanging();
					this._QueQuanID = value;
					this.SendPropertyChanged("QueQuanID");
					this.OnQueQuanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit NOT NULL")]
		public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_TaiKhoan", Storage="_TaiKhoans", ThisKey="MSSV", OtherKey="ChuTaiKhoan")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_LuuTru", Storage="_LuuTrus", ThisKey="MSSV", OtherKey="MaHocSinh")]
		public EntitySet<LuuTru> LuuTrus
		{
			get
			{
				return this._LuuTrus;
			}
			set
			{
				this._LuuTrus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QueQuan_SinhVien", Storage="_QueQuan", ThisKey="QueQuanID", OtherKey="ID", IsForeignKey=true)]
		public QueQuan QueQuan
		{
			get
			{
				return this._QueQuan.Entity;
			}
			set
			{
				QueQuan previousValue = this._QueQuan.Entity;
				if (((previousValue != value) 
							|| (this._QueQuan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QueQuan.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._QueQuan.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._QueQuanID = value.ID;
					}
					else
					{
						this._QueQuanID = default(int);
					}
					this.SendPropertyChanged("QueQuan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QueQuan_SinhVien1", Storage="_QueQuan1", ThisKey="QueQuanID", OtherKey="ID", IsForeignKey=true)]
		public QueQuan QueQuan1
		{
			get
			{
				return this._QueQuan1.Entity;
			}
			set
			{
				QueQuan previousValue = this._QueQuan1.Entity;
				if (((previousValue != value) 
							|| (this._QueQuan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QueQuan1.Entity = null;
						previousValue.SinhViens1.Remove(this);
					}
					this._QueQuan1.Entity = value;
					if ((value != null))
					{
						value.SinhViens1.Add(this);
						this._QueQuanID = value.ID;
					}
					else
					{
						this._QueQuanID = default(int);
					}
					this.SendPropertyChanged("QueQuan1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QueQuan_SinhVien2", Storage="_QueQuan2", ThisKey="QueQuanID", OtherKey="ID", IsForeignKey=true)]
		public QueQuan QueQuan2
		{
			get
			{
				return this._QueQuan2.Entity;
			}
			set
			{
				QueQuan previousValue = this._QueQuan2.Entity;
				if (((previousValue != value) 
							|| (this._QueQuan2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QueQuan2.Entity = null;
						previousValue.SinhViens2.Remove(this);
					}
					this._QueQuan2.Entity = value;
					if ((value != null))
					{
						value.SinhViens2.Add(this);
						this._QueQuanID = value.ID;
					}
					else
					{
						this._QueQuanID = default(int);
					}
					this.SendPropertyChanged("QueQuan2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_LuuTrus(LuuTru entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
}
#pragma warning restore 1591
